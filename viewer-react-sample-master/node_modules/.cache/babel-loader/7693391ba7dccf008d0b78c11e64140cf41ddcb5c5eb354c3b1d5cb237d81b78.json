{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicol\\\\ProyectosWeb\\\\icd\\\\icd7\\\\viewer-react-sample-master\\\\src\\\\components\\\\Viewer.jsx\";\n/// import * as Autodesk from \"@types/forge-viewer\";\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport '../extensions/FiltrosVisuales.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Autodesk\n} = window;\nconst runtime = {\n  /** @type {Autodesk.Viewing.InitializerOptions} */\n  options: null,\n  /** @type {Promise<void>} */\n  ready: null\n};\n\n/**\n * Initializes global runtime for communicating with Autodesk Platform Services.\n * Calling this function repeatedly with different options is not allowed, and will result in an exception.\n * @async\n * @param {Autodesk.Viewing.InitializerOptions} options Runtime initialization options.\n * @returns {Promise<void>}\n */\nfunction initializeViewerRuntime(options) {\n  if (!runtime.ready) {\n    runtime.options = {\n      ...options\n    };\n    runtime.ready = new Promise(resolve => Autodesk.Viewing.Initializer(runtime.options, resolve));\n  } else {\n    if (['accessToken', 'getAccessToken', 'env', 'api', 'language'].some(prop => options[prop] !== runtime.options[prop])) {\n      return Promise.reject('Cannot initialize another viewer runtime with different settings.');\n    }\n  }\n  return runtime.ready;\n}\nFiltrosVisuales.prototype.load = function () {\n  if (this.viewer.toolbar) {\n    // Toolbar is already available, create the UI\n    this.createUI();\n  } else {\n    // Toolbar hasn't been created yet, wait until we get notification of its creation\n    this.onToolbarCreatedBinded = this.onToolbarCreated.bind(this);\n    this.viewer.addEventListener(av.TOOLBAR_CREATED_EVENT, this.onToolbarCreatedBinded);\n  }\n  return true;\n};\nFiltrosVisuales.prototype.onToolbarCreated = function () {\n  this.viewer.removeEventListener(av.TOOLBAR_CREATED_EVENT, this.onToolbarCreatedBinded);\n  this.onToolbarCreatedBinded = null;\n  this.createUI();\n};\nFiltrosVisuales.prototype.createUI = function () {\n  alert('TODO: Create Toolbar!');\n};\n\n/**\n * Wrapper for the Autodesk Platform Services viewer component.\n */\nclass Viewer extends React.Component {\n  constructor(props) {\n    super(props);\n    /** @type {HTMLDivElement} */\n    this.onViewerCameraChange = () => {\n      if (this.props.onCameraChange) {\n        this.props.onCameraChange({\n          viewer: this.viewer,\n          camera: this.viewer.getCamera()\n        });\n      }\n    };\n    this.onViewerSelectionChange = () => {\n      if (this.props.onSelectionChange) {\n        this.props.onSelectionChange({\n          viewer: this.viewer,\n          ids: this.viewer.getSelection()\n        });\n      }\n    };\n    this.container = null;\n    /** @type {Autodesk.Viewing.GuiViewer3D} */\n    this.viewer = null;\n  }\n  componentDidMount() {\n    initializeViewerRuntime(this.props.runtime || {}).then(_ => {\n      this.viewer = new Autodesk.Viewing.GuiViewer3D(this.container);\n      this.viewer.start();\n      this.viewer.loadExtension('FiltrosVisuales'); // Carga tu extensión aquí\n\n      this.viewer.addEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, this.onViewerCameraChange);\n      this.viewer.addEventListener(Autodesk.Viewing.SELECTION_CHANGED_EVENT, this.onViewerSelectionChange);\n      this.updateViewerState({});\n    }).catch(err => console.error(err));\n  }\n  componentWillUnmount() {\n    if (this.viewer) {\n      this.viewer.removeEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, this.onViewerCameraChange);\n      this.viewer.removeEventListener(Autodesk.Viewing.SELECTION_CHANGED_EVENT, this.onViewerSelectionChange);\n      this.viewer.finish();\n      this.viewer = null;\n    }\n  }\n  componentDidUpdate(prevProps) {\n    if (this.viewer) {\n      this.updateViewerState(prevProps);\n    }\n  }\n  updateViewerState(prevProps) {\n    if (this.props.urn && this.props.urn !== prevProps.urn) {\n      Autodesk.Viewing.Document.load('urn:' + this.props.urn, doc => this.viewer.loadDocumentNode(doc, doc.getRoot().getDefaultGeometry()), (code, message, errors) => console.error(code, message, errors));\n    } else if (!this.props.urn && this.viewer.model) {\n      this.viewer.unloadModel(this.viewer.model);\n    }\n    const selectedIds = this.viewer.getSelection();\n    if (JSON.stringify(this.props.selectedIds || []) !== JSON.stringify(selectedIds)) {\n      this.viewer.select(this.props.selectedIds);\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref => this.container = ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 16\n    }, this);\n  }\n}\nViewer.propTypes = {\n  /** Viewer runtime initialization options. */\n  runtime: PropTypes.object,\n  /** URN of model to be loaded. */\n  urn: PropTypes.string,\n  /** List of selected object IDs. */\n  selectedIds: PropTypes.arrayOf(PropTypes.number),\n  /** Callback for when the viewer camera changes. */\n  onCameraChange: PropTypes.func,\n  /** Callback for when the viewer selectio changes. */\n  onSelectionChange: PropTypes.func\n};\nexport default Viewer;","map":{"version":3,"names":["React","PropTypes","Autodesk","window","runtime","options","ready","initializeViewerRuntime","Promise","resolve","Viewing","Initializer","some","prop","reject","FiltrosVisuales","prototype","load","viewer","toolbar","createUI","onToolbarCreatedBinded","onToolbarCreated","bind","addEventListener","av","TOOLBAR_CREATED_EVENT","removeEventListener","alert","Viewer","Component","constructor","props","onViewerCameraChange","onCameraChange","camera","getCamera","onViewerSelectionChange","onSelectionChange","ids","getSelection","container","componentDidMount","then","_","GuiViewer3D","start","loadExtension","CAMERA_CHANGE_EVENT","SELECTION_CHANGED_EVENT","updateViewerState","catch","err","console","error","componentWillUnmount","finish","componentDidUpdate","prevProps","urn","Document","doc","loadDocumentNode","getRoot","getDefaultGeometry","code","message","errors","model","unloadModel","selectedIds","JSON","stringify","select","render","ref","propTypes","object","string","arrayOf","number","func"],"sources":["C:/Users/nicol/ProyectosWeb/icd/icd7/viewer-react-sample-master/src/components/Viewer.jsx"],"sourcesContent":["/// import * as Autodesk from \"@types/forge-viewer\";\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport '../extensions/FiltrosVisuales.js';\nconst { Autodesk } = window;\n\nconst runtime = {\n    /** @type {Autodesk.Viewing.InitializerOptions} */\n    options: null,\n    /** @type {Promise<void>} */\n    ready: null\n};\n\n/**\n * Initializes global runtime for communicating with Autodesk Platform Services.\n * Calling this function repeatedly with different options is not allowed, and will result in an exception.\n * @async\n * @param {Autodesk.Viewing.InitializerOptions} options Runtime initialization options.\n * @returns {Promise<void>}\n */\nfunction initializeViewerRuntime(options) {\n    if (!runtime.ready) {\n        runtime.options = { ...options };\n        runtime.ready = new Promise((resolve) => Autodesk.Viewing.Initializer(runtime.options, resolve));\n    } else {\n        if (['accessToken', 'getAccessToken', 'env', 'api', 'language'].some(prop => options[prop] !== runtime.options[prop])) {\n            return Promise.reject('Cannot initialize another viewer runtime with different settings.')\n        }\n    }\n    return runtime.ready;\n}\nFiltrosVisuales.prototype.load = function() {\n\n    if (this.viewer.toolbar) {\n      // Toolbar is already available, create the UI\n      this.createUI();\n    } else {\n      // Toolbar hasn't been created yet, wait until we get notification of its creation\n      this.onToolbarCreatedBinded = this.onToolbarCreated.bind(this);\n      this.viewer.addEventListener(av.TOOLBAR_CREATED_EVENT, this.onToolbarCreatedBinded);\n    }\n  \n    return true;\n  };\n  \n  FiltrosVisuales.prototype.onToolbarCreated = function() {\n    this.viewer.removeEventListener(av.TOOLBAR_CREATED_EVENT, this.onToolbarCreatedBinded);\n    this.onToolbarCreatedBinded = null;\n    this.createUI();\n  };\n  \n  FiltrosVisuales.prototype.createUI = function() {\n    alert('TODO: Create Toolbar!');\n  };\n\n/**\n * Wrapper for the Autodesk Platform Services viewer component.\n */\nclass Viewer extends React.Component {\n    constructor(props) {\n        super(props);\n        /** @type {HTMLDivElement} */\n        this.container = null;\n        /** @type {Autodesk.Viewing.GuiViewer3D} */\n        this.viewer = null;\n    }\n\n    componentDidMount() {\n        initializeViewerRuntime(this.props.runtime || {})\n            .then(_ => {\n                this.viewer = new Autodesk.Viewing.GuiViewer3D(this.container);\n                this.viewer.start();\n                this.viewer.loadExtension('FiltrosVisuales'); // Carga tu extensión aquí\n           \n                this.viewer.addEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, this.onViewerCameraChange);\n                this.viewer.addEventListener(Autodesk.Viewing.SELECTION_CHANGED_EVENT, this.onViewerSelectionChange);\n                this.updateViewerState({});\n\n\n            })\n            .catch(err => console.error(err));\n    }\n\n    componentWillUnmount() {\n        if (this.viewer) {\n            this.viewer.removeEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, this.onViewerCameraChange);\n            this.viewer.removeEventListener(Autodesk.Viewing.SELECTION_CHANGED_EVENT, this.onViewerSelectionChange);\n            this.viewer.finish();\n            this.viewer = null;\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.viewer) {\n            this.updateViewerState(prevProps);\n        }\n    }\n\n    updateViewerState(prevProps) {\n        if (this.props.urn && this.props.urn !== prevProps.urn) {\n            Autodesk.Viewing.Document.load(\n                'urn:' + this.props.urn,\n                (doc) => this.viewer.loadDocumentNode(doc, doc.getRoot().getDefaultGeometry()),\n                (code, message, errors) => console.error(code, message, errors)\n            );\n        } else if (!this.props.urn && this.viewer.model) {\n            this.viewer.unloadModel(this.viewer.model);\n        }\n\n        const selectedIds = this.viewer.getSelection();\n        if (JSON.stringify(this.props.selectedIds || []) !== JSON.stringify(selectedIds)) {\n            this.viewer.select(this.props.selectedIds);\n        }\n    }\n\n    onViewerCameraChange = () => {\n        if (this.props.onCameraChange) {\n            this.props.onCameraChange({ viewer: this.viewer, camera: this.viewer.getCamera() });\n        }\n    }\n\n    onViewerSelectionChange = () => {\n        if (this.props.onSelectionChange) {\n            this.props.onSelectionChange({ viewer: this.viewer, ids: this.viewer.getSelection() });\n        }\n    }\n\n    render() {\n        return <div ref={ref => this.container = ref}></div>;\n    }\n}\n\nViewer.propTypes = {\n    /** Viewer runtime initialization options. */\n    runtime: PropTypes.object,\n    /** URN of model to be loaded. */\n    urn: PropTypes.string,\n    /** List of selected object IDs. */\n    selectedIds: PropTypes.arrayOf(PropTypes.number),\n    /** Callback for when the viewer camera changes. */\n    onCameraChange: PropTypes.func,\n    /** Callback for when the viewer selectio changes. */\n    onSelectionChange: PropTypes.func\n};\n\nexport default Viewer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}