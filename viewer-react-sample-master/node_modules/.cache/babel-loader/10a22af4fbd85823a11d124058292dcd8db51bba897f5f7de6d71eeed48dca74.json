{"ast":null,"code":"import _classCallCheck from\"C:/Users/nicol/ProyectosWeb/icd/icd7/viewer-react-sample-master/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/nicol/ProyectosWeb/icd/icd7/viewer-react-sample-master/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"C:/Users/nicol/ProyectosWeb/icd/icd7/viewer-react-sample-master/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"C:/Users/nicol/ProyectosWeb/icd/icd7/viewer-react-sample-master/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import{useVisibility}from'../context/VisibilityContext';var HandleSelectionExtension=/*#__PURE__*/function(_Autodesk$Viewing$Ext){_inherits(HandleSelectionExtension,_Autodesk$Viewing$Ext);var _super=_createSuper(HandleSelectionExtension);function HandleSelectionExtension(viewer,options){var _this2;_classCallCheck(this,HandleSelectionExtension);_this2=_super.call(this,viewer,options);_this2._group=null;_this2._button=null;_this2._button2=null;_this2._data=null;return _this2;}_createClass(HandleSelectionExtension,[{key:\"load\",value:function load(){console.log('HandleSelectionExtension has been loaded');return true;}},{key:\"unload\",value:function unload(){// Clean our UI elements if we added any\nif(this._group){this._group.removeControl(this._button);if(this._group.getNumberOfControls()===0){this.viewer.toolbar.removeControl(this._group);}}console.log('HandleSelectionExtension has been unloaded');return true;}},{key:\"onToolbarCreated\",value:function onToolbarCreated(){var _this3=this;// Create a new toolbar group if it doesn't exist\nthis._group=this.viewer.toolbar.getControl('allMyAwesomeExtensionsToolbar');if(!this._group){this._group=new Autodesk.Viewing.UI.ControlGroup('allMyAwesomeExtensionsToolbar');this.viewer.toolbar.addControl(this._group);}window.toggleTabVisibility=function(){var _useVisibility=useVisibility(),toggleVisibility=_useVisibility.toggleVisibility;// Esto puede no funcionar directamente ya que useVisibility necesita un componente de React\ntoggleVisibility();};// Add a new button to the toolbar group\nthis._button=new Autodesk.Viewing.UI.Button('handleSelectionExtensionButton');this._gestorVistasButton=new Autodesk.Viewing.UI.Button('gestorVistasButton');this._button.onClick=function(ev){console.log(\"detecto click\");window.dispatchEvent(new CustomEvent('toggleTabVisibility'));var selection=_this3.viewer.getSelection();// this.viewer.clearSelection();\n// Anything selected?\nif(selection.length>0){var isolated=[];// Iterate through the list of selected dbIds\nselection.forEach(function(dbId){// Get properties of each dbId\n_this3.viewer.getProperties(dbId,function(props){// Output properties to console\nconsole.log(props);// Ask if want to isolate\n/*                         if (confirm(`Isolate ${props.name} (${props.externalId})?`)) {\r\n                            isolated.push(dbId);\r\n                            this.viewer.isolate(isolated);\r\n                        } */isolated.push(dbId);_this3.viewer.isolate(isolated);});});}else{// If nothing selected, restore\n_this3.viewer.isolate(0);}};this._gestorVistasButton.onClick=function(ev){// Aquí puedes agregar la lógica que se ejecutará cuando se haga clic en el botón\nconsole.log('Botón gestorVistas pulsado');};this._button.setToolTip('Funciones ICD');this._gestorVistasButton.setToolTip('Gestor de Vistas');var iconPath=\"images/isotipoTransparente.png\";this._button.icon.style=\"background-image: url(\".concat(iconPath,\"); background-size: 22px 22px;\");var iconPathGestorVistas=\"images/eyered.svg\";// Reemplaza con la ruta de tu icono\nthis._gestorVistasButton.icon.style=\"background-image: url(\".concat(iconPathGestorVistas,\"); background-size: 22px 22px;\");// this._button.classList.add(\"fas\", \"fa-arrows-alt\");\n//   this._button.addClass('handleSelectionExtensionIcon');\nthis._group.addControl(this._button);this._group.addControl(this._gestorVistasButton);//  this._button2.setToolTip('atBIM Button');\n// this._button2.addClass('handleSelectionExtensionIcon');\n//this._group.addControl(this._button2);\n}},{key:\"drawData\",value:function drawData(){var _this=this;console.log(this._data);var div=document.getElementById('atbimPanel');div.innerHTML='<canvas id=\"myChart\" width=\"400\" height=\"400\"></canvas>';var ctx=document.getElementById('myChart').getContext('2d');var keys=Object.keys(this._data);var values=Object.values(this._data).map(function(x){return x.cantidad;});new Chart(ctx,{type:'bar',data:{labels:keys,datasets:[{label:'Cantidad',data:values,backgroundColor:'rgba(255, 99, 132, 0.2)',borderColor:'rgba(255, 99, 132, 1)',borderWidth:2}]},options:{'onClick':function onClick(evento,item){if(item[0]!==undefined){var label=item[0]._model.label;var dbIds=_this._data[label].dbIds;_this.viewer.isolate(dbIds);_this.viewer.fitToView(dbIds,_this.viewer.model);}},scales:{yAxes:[{ticks:{beginAtZero:true}}]}}});}}]);return HandleSelectionExtension;}(Autodesk.Viewing.Extension);Autodesk.Viewing.theExtensionManager.registerExtension('HandleSelectionExtension',HandleSelectionExtension);","map":{"version":3,"names":["useVisibility","HandleSelectionExtension","viewer","options","_group","_button","_button2","_data","console","log","removeControl","getNumberOfControls","toolbar","getControl","Autodesk","Viewing","UI","ControlGroup","addControl","window","toggleTabVisibility","toggleVisibility","Button","_gestorVistasButton","onClick","ev","dispatchEvent","CustomEvent","selection","getSelection","length","isolated","forEach","dbId","getProperties","props","push","isolate","setToolTip","iconPath","icon","style","iconPathGestorVistas","_this","div","document","getElementById","innerHTML","ctx","getContext","keys","Object","values","map","x","cantidad","Chart","type","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","evento","item","undefined","_model","dbIds","fitToView","model","scales","yAxes","ticks","beginAtZero","Extension","theExtensionManager","registerExtension"],"sources":["C:/Users/nicol/ProyectosWeb/icd/icd7/viewer-react-sample-master/src/extensions/HandleSelectionExtension.js"],"sourcesContent":["import { useVisibility } from '../context/VisibilityContext';\r\n\r\nclass HandleSelectionExtension extends Autodesk.Viewing.Extension {\r\n    constructor(viewer, options) {\r\n        super(viewer, options);\r\n        this._group = null;\r\n        this._button = null;\r\n        this._button2 = null;\r\n        this._data = null;\r\n    }\r\n\r\n    load() {\r\n        console.log('HandleSelectionExtension has been loaded');\r\n        return true;\r\n    }\r\n\r\n    unload() {\r\n        // Clean our UI elements if we added any\r\n        if (this._group) {\r\n            this._group.removeControl(this._button);\r\n            if (this._group.getNumberOfControls() === 0) {\r\n                this.viewer.toolbar.removeControl(this._group);\r\n            }\r\n        }\r\n        console.log('HandleSelectionExtension has been unloaded');\r\n        return true;\r\n    }\r\n\r\n    onToolbarCreated() {\r\n        // Create a new toolbar group if it doesn't exist\r\n        this._group = this.viewer.toolbar.getControl('allMyAwesomeExtensionsToolbar');\r\n        if (!this._group) {\r\n            this._group = new Autodesk.Viewing.UI.ControlGroup('allMyAwesomeExtensionsToolbar');\r\n            this.viewer.toolbar.addControl(this._group);\r\n        }\r\n        window.toggleTabVisibility = () => {\r\n            const { toggleVisibility } = useVisibility(); // Esto puede no funcionar directamente ya que useVisibility necesita un componente de React\r\n            toggleVisibility();\r\n        };\r\n        // Add a new button to the toolbar group\r\n        this._button = new Autodesk.Viewing.UI.Button('handleSelectionExtensionButton');\r\n        this._gestorVistasButton = new Autodesk.Viewing.UI.Button('gestorVistasButton');\r\n        this._button.onClick = (ev) => {\r\n           console.log(\"detecto click\");\r\n           window.dispatchEvent(new CustomEvent('toggleTabVisibility'));\r\n      \r\n            const selection = this.viewer.getSelection();\r\n           // this.viewer.clearSelection();\r\n            // Anything selected?\r\n            if (selection.length > 0) {\r\n                let isolated = [];\r\n                // Iterate through the list of selected dbIds\r\n                selection.forEach((dbId) => {\r\n                    // Get properties of each dbId\r\n                    this.viewer.getProperties(dbId, (props) => {\r\n                        // Output properties to console\r\n                        console.log(props);\r\n                        // Ask if want to isolate\r\n/*                         if (confirm(`Isolate ${props.name} (${props.externalId})?`)) {\r\n                            isolated.push(dbId);\r\n                            this.viewer.isolate(isolated);\r\n                        } */\r\n                        isolated.push(dbId);\r\n                        this.viewer.isolate(isolated);\r\n                    });\r\n                });\r\n            } else {\r\n                // If nothing selected, restore\r\n                this.viewer.isolate(0);\r\n            }\r\n        };\r\n\r\n        this._gestorVistasButton.onClick = (ev) => {\r\n            // Aquí puedes agregar la lógica que se ejecutará cuando se haga clic en el botón\r\n            console.log('Botón gestorVistas pulsado');\r\n        };\r\n        this._button.setToolTip('Funciones ICD');\r\n        this._gestorVistasButton.setToolTip('Gestor de Vistas');\r\n        let iconPath = \"images/isotipoTransparente.png\";\r\n        this._button.icon.style = `background-image: url(${iconPath}); background-size: 22px 22px;`;\r\n        let iconPathGestorVistas = \"images/eyered.svg\"; // Reemplaza con la ruta de tu icono\r\n        this._gestorVistasButton.icon.style = `background-image: url(${iconPathGestorVistas}); background-size: 22px 22px;`;\r\n\r\n        \r\n        \r\n      \r\n       // this._button.classList.add(\"fas\", \"fa-arrows-alt\");\r\n       \r\n     //   this._button.addClass('handleSelectionExtensionIcon');\r\n        this._group.addControl(this._button);\r\n        this._group.addControl(this._gestorVistasButton);\r\n    \r\n      //  this._button2.setToolTip('atBIM Button');\r\n       // this._button2.addClass('handleSelectionExtensionIcon');\r\n        //this._group.addControl(this._button2);\r\n    }\r\n\r\n    drawData() {\r\n        let _this = this;\r\n        console.log(this._data);\r\n        var div = document.getElementById('atbimPanel');\r\n        div.innerHTML = '<canvas id=\"myChart\" width=\"400\" height=\"400\"></canvas>';\r\n        var ctx = document.getElementById('myChart').getContext('2d');\r\n        let keys = Object.keys(this._data);\r\n        let values = Object.values(this._data).map(x => x.cantidad);\r\n        new Chart(ctx, {\r\n            type: 'bar',\r\n            data: {\r\n                labels: keys,\r\n                datasets: [{\r\n                    label: 'Cantidad',\r\n                    data: values,\r\n                    backgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n                    borderColor: 'rgba(255, 99, 132, 1)',\r\n                    borderWidth: 2\r\n                }]\r\n            },\r\n            options: {\r\n                'onClick': function(evento, item) {\r\n                 \r\n                    if (item[0] !== undefined) {\r\n                        let label = item[0]._model.label;\r\n                        let dbIds = _this._data[label].dbIds;                        \r\n                        _this.viewer.isolate(dbIds);\r\n                        _this.viewer.fitToView(dbIds, _this.viewer.model);\r\n                    }\r\n                },\r\n                scales: {\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            beginAtZero: true\r\n                        }\r\n                    }]\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nAutodesk.Viewing.theExtensionManager.registerExtension('HandleSelectionExtension', HandleSelectionExtension);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}