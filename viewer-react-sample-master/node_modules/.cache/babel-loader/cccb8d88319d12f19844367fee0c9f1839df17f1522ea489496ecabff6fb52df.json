{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicol\\\\ProyectosWeb\\\\icd\\\\icd7\\\\icd\\\\src\\\\components\\\\Viewer.jsx\";\n/// import * as Autodesk from \"@types/forge-viewer\";\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport '../extensions/FiltrosVisuales.js';\nimport '../extensions/HandleSelectionExtension.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Autodesk\n} = window;\nconst runtime = {\n  /** @type {Autodesk.Viewing.InitializerOptions} */\n  options: null,\n  /** @type {Promise<void>} */\n  ready: null\n};\n\n/**\n * Initializes global runtime for communicating with Autodesk Platform Services.\n * Calling this function repeatedly with different options is not allowed, and will result in an exception.\n * @async\n * @param {Autodesk.Viewing.InitializerOptions} options Runtime initialization options.\n * @returns {Promise<void>}\n */\nfunction initializeViewerRuntime(options) {\n  if (!runtime.ready) {\n    runtime.options = {\n      ...options\n    };\n    runtime.ready = new Promise(resolve => Autodesk.Viewing.Initializer(runtime.options, resolve));\n  } else {\n    if (['accessToken', 'getAccessToken', 'env', 'api', 'language'].some(prop => options[prop] !== runtime.options[prop])) {\n      return Promise.reject('Cannot initialize another viewer runtime with different settings.');\n    }\n  }\n  return runtime.ready;\n}\n\n/**\n * Wrapper for the Autodesk Platform Services viewer component.\n */\nclass Viewer extends React.Component {\n  constructor(props) {\n    super(props);\n    /** @type {HTMLDivElement} */\n    this.onViewerCameraChange = () => {\n      if (this.props.onCameraChange) {\n        this.props.onCameraChange({\n          viewer: this.viewer,\n          camera: this.viewer.getCamera()\n        });\n      }\n    };\n    this.onViewerSelectionChange = () => {\n      if (this.props.onSelectionChange) {\n        this.props.onSelectionChange({\n          viewer: this.viewer,\n          ids: this.viewer.getSelection()\n        });\n      }\n    };\n    this.container = null;\n    /** @type {Autodesk.Viewing.GuiViewer3D} */\n    this.viewer = null;\n  }\n  componentDidMount() {\n    initializeViewerRuntime(this.props.runtime || {}).then(_ => {\n      this.viewer = new Autodesk.Viewing.GuiViewer3D(this.container);\n      this.viewer.start();\n      this.viewer.loadExtension('FiltrosVisuales'); // Carga tu extensión aquí\n      this.viewer.loadExtension('HandleSelectionExtension'); // Carga tu extensión aquí\n      this.viewer.addEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, this.onViewerCameraChange);\n      this.viewer.addEventListener(Autodesk.Viewing.SELECTION_CHANGED_EVENT, this.onViewerSelectionChange);\n      this.updateViewerState({});\n    }).catch(err => console.error(err));\n  }\n  componentWillUnmount() {\n    if (this.viewer) {\n      this.viewer.removeEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, this.onViewerCameraChange);\n      this.viewer.removeEventListener(Autodesk.Viewing.SELECTION_CHANGED_EVENT, this.onViewerSelectionChange);\n      this.viewer.removeEventListener(Autodesk.Viewing.GEOMETRY_LOADED_EVENT, this.adjustToolbarStyle);\n      this.viewer.finish();\n      this.viewer = null;\n    }\n    adjustToolbarStyle = () => {\n      const toolbar = this.viewer.getToolbar(true).container;\n      toolbar.style.bottom = '550px ';\n    };\n  }\n  componentDidUpdate(prevProps) {\n    if (this.viewer) {\n      this.updateViewerState(prevProps);\n    }\n  }\n  updateViewerState(prevProps) {\n    if (this.props.urn && this.props.urn !== prevProps.urn) {\n      Autodesk.Viewing.Document.load('urn:' + this.props.urn, doc => this.viewer.loadDocumentNode(doc, doc.getRoot().getDefaultGeometry()), (code, message, errors) => console.error(code, message, errors));\n    } else if (!this.props.urn && this.viewer.model) {\n      this.viewer.unloadModel(this.viewer.model);\n    }\n    const selectedIds = this.viewer.getSelection();\n    if (JSON.stringify(this.props.selectedIds || []) !== JSON.stringify(selectedIds)) {\n      this.viewer.select(this.props.selectedIds);\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref => this.container = ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 16\n    }, this);\n  }\n}\nViewer.propTypes = {\n  /** Viewer runtime initialization options. */\n  runtime: PropTypes.object,\n  /** URN of model to be loaded. */\n  urn: PropTypes.string,\n  /** List of selected object IDs. */\n  selectedIds: PropTypes.arrayOf(PropTypes.number),\n  /** Callback for when the viewer camera changes. */\n  onCameraChange: PropTypes.func,\n  /** Callback for when the viewer selectio changes. */\n  onSelectionChange: PropTypes.func\n};\nexport default Viewer;","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","Autodesk","window","runtime","options","ready","initializeViewerRuntime","Promise","resolve","Viewing","Initializer","some","prop","reject","Viewer","Component","constructor","props","onViewerCameraChange","onCameraChange","viewer","camera","getCamera","onViewerSelectionChange","onSelectionChange","ids","getSelection","container","componentDidMount","then","_","GuiViewer3D","start","loadExtension","addEventListener","CAMERA_CHANGE_EVENT","SELECTION_CHANGED_EVENT","updateViewerState","catch","err","console","error","componentWillUnmount","removeEventListener","GEOMETRY_LOADED_EVENT","adjustToolbarStyle","finish","toolbar","getToolbar","style","bottom","componentDidUpdate","prevProps","urn","Document","load","doc","loadDocumentNode","getRoot","getDefaultGeometry","code","message","errors","model","unloadModel","selectedIds","JSON","stringify","select","render","ref","fileName","_jsxFileName","lineNumber","columnNumber","propTypes","object","string","arrayOf","number","func"],"sources":["C:/Users/nicol/ProyectosWeb/icd/icd7/icd/src/components/Viewer.jsx"],"sourcesContent":["/// import * as Autodesk from \"@types/forge-viewer\";\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport '../extensions/FiltrosVisuales.js';  \nimport '../extensions/HandleSelectionExtension.js';\nconst { Autodesk } = window;\n\nconst runtime = {\n    /** @type {Autodesk.Viewing.InitializerOptions} */\n    options: null,\n    /** @type {Promise<void>} */\n    ready: null\n};\n\n/**\n * Initializes global runtime for communicating with Autodesk Platform Services.\n * Calling this function repeatedly with different options is not allowed, and will result in an exception.\n * @async\n * @param {Autodesk.Viewing.InitializerOptions} options Runtime initialization options.\n * @returns {Promise<void>}\n */\nfunction initializeViewerRuntime(options) {\n    if (!runtime.ready) {\n        runtime.options = { ...options };\n        runtime.ready = new Promise((resolve) => Autodesk.Viewing.Initializer(runtime.options, resolve));\n    } else {\n        if (['accessToken', 'getAccessToken', 'env', 'api', 'language'].some(prop => options[prop] !== runtime.options[prop])) {\n            return Promise.reject('Cannot initialize another viewer runtime with different settings.')\n        }\n    }\n    return runtime.ready;\n}\n\n/**\n * Wrapper for the Autodesk Platform Services viewer component.\n */\nclass Viewer extends React.Component {\n    constructor(props) {\n        super(props);\n        /** @type {HTMLDivElement} */\n        this.container = null;\n        /** @type {Autodesk.Viewing.GuiViewer3D} */\n        this.viewer = null;\n    }\n\n    componentDidMount() {\n        initializeViewerRuntime(this.props.runtime || {})\n            .then(_ => {\n                this.viewer = new Autodesk.Viewing.GuiViewer3D(this.container);\n                this.viewer.start();\n                this.viewer.loadExtension('FiltrosVisuales'); // Carga tu extensión aquí\n                this.viewer.loadExtension('HandleSelectionExtension'); // Carga tu extensión aquí\n                this.viewer.addEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, this.onViewerCameraChange);\n                this.viewer.addEventListener(Autodesk.Viewing.SELECTION_CHANGED_EVENT, this.onViewerSelectionChange);\n                this.updateViewerState({});\n\n                \n            })\n            .catch(err => console.error(err));\n    }\n\n    componentWillUnmount() {\n        if (this.viewer) {\n            this.viewer.removeEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, this.onViewerCameraChange);\n            this.viewer.removeEventListener(Autodesk.Viewing.SELECTION_CHANGED_EVENT, this.onViewerSelectionChange);\n            this.viewer.removeEventListener(Autodesk.Viewing.GEOMETRY_LOADED_EVENT, this.adjustToolbarStyle);\n            this.viewer.finish();\n            this.viewer = null;\n        }\n        adjustToolbarStyle = () => {\n            const toolbar = this.viewer.getToolbar(true).container;\n            toolbar.style.bottom = '550px ';\n        };\n    }\n    \n    componentDidUpdate(prevProps) {\n        if (this.viewer) {\n            this.updateViewerState(prevProps);\n        }\n    }\n\n    updateViewerState(prevProps) {\n        if (this.props.urn && this.props.urn !== prevProps.urn) {\n            Autodesk.Viewing.Document.load(\n                'urn:' + this.props.urn,\n                (doc) => this.viewer.loadDocumentNode(doc, doc.getRoot().getDefaultGeometry()),\n                (code, message, errors) => console.error(code, message, errors)\n            );\n        } else if (!this.props.urn && this.viewer.model) {\n            this.viewer.unloadModel(this.viewer.model);\n        }\n\n        const selectedIds = this.viewer.getSelection();\n        if (JSON.stringify(this.props.selectedIds || []) !== JSON.stringify(selectedIds)) {\n            this.viewer.select(this.props.selectedIds);\n        }\n    }\n\n    onViewerCameraChange = () => {\n        if (this.props.onCameraChange) {\n            this.props.onCameraChange({ viewer: this.viewer, camera: this.viewer.getCamera() });\n        }\n    }\n\n    onViewerSelectionChange = () => {\n        if (this.props.onSelectionChange) {\n            this.props.onSelectionChange({ viewer: this.viewer, ids: this.viewer.getSelection() });\n        }\n    }\n\n    render() {\n        return <div ref={ref => this.container = ref}></div>;\n    }\n}\n\nViewer.propTypes = {\n    /** Viewer runtime initialization options. */\n    runtime: PropTypes.object,\n    /** URN of model to be loaded. */\n    urn: PropTypes.string,\n    /** List of selected object IDs. */\n    selectedIds: PropTypes.arrayOf(PropTypes.number),\n    /** Callback for when the viewer camera changes. */\n    onCameraChange: PropTypes.func,\n    /** Callback for when the viewer selectio changes. */\n    onSelectionChange: PropTypes.func\n};\n\nexport default Viewer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}