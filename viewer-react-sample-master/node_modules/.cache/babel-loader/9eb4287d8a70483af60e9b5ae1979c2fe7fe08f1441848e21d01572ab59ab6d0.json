{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicol\\\\ProyectosWeb\\\\icd\\\\icd7\\\\icd\\\\src\\\\components\\\\proyectos\\\\ViewerProyectos.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport '../extensions/FiltrosVisuales.js';\nimport '../extensions/HandleSelectionExtension.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Autodesk\n} = window;\nconst runtime = {\n  /** @type {Autodesk.Viewing.InitializerOptions} */\n  options: null,\n  /** @type {Promise<void>} */\n  ready: null\n};\nfunction initializeViewerRuntime(options) {\n  if (!runtime.ready) {\n    runtime.options = {\n      ...options\n    };\n    runtime.ready = new Promise(resolve => Autodesk.Viewing.Initializer(runtime.options, resolve));\n  } else {\n    if (['accessToken', 'getAccessToken', 'env', 'api', 'language'].some(prop => options[prop] !== runtime.options[prop])) {\n      return Promise.reject('Cannot initialize another viewer runtime with different settings.');\n    }\n  }\n  return runtime.ready;\n}\nclass ViewerProyectos extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onViewerCameraChange = () => {\n      if (this.props.onCameraChange) {\n        this.props.onCameraChange({\n          viewer: this.viewer,\n          camera: this.viewer.getCamera()\n        });\n      }\n    };\n    this.onViewerSelectionChange = () => {\n      if (this.props.onSelectionChange) {\n        this.props.onSelectionChange({\n          viewer: this.viewer,\n          ids: this.viewer.getSelection()\n        });\n      }\n    };\n    this.container = null;\n    this.viewer = null;\n  }\n  componentDidMount() {\n    initializeViewerRuntime(this.props.runtime || {}).then(_ => {\n      this.viewer = new Autodesk.Viewing.GuiViewer3D(this.container, {\n        // Configuraciones adicionales si son necesarias\n      });\n      this.viewer.start();\n      this.loadExtensions();\n      this.addEventListeners();\n      this.updateViewerState({});\n    }).catch(err => console.error('Error al inicializar el Viewer:', err));\n  }\n  componentWillUnmount() {\n    this.removeEventListeners();\n    if (this.viewer) {\n      this.viewer.finish();\n      this.viewer = null;\n    }\n  }\n  componentDidUpdate(prevProps) {\n    this.updateViewerState(prevProps);\n  }\n  loadExtensions() {\n    this.viewer.loadExtension('FiltrosVisuales');\n    this.viewer.loadExtension('HandleSelectionExtension');\n  }\n  addEventListeners() {\n    this.viewer.addEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, this.onViewerCameraChange);\n    this.viewer.addEventListener(Autodesk.Viewing.SELECTION_CHANGED_EVENT, this.onViewerSelectionChange);\n  }\n  removeEventListeners() {\n    this.viewer.removeEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, this.onViewerCameraChange);\n    this.viewer.removeEventListener(Autodesk.Viewing.SELECTION_CHANGED_EVENT, this.onViewerSelectionChange);\n  }\n  updateViewerState(prevProps) {\n    // Lógica para actualizar el estado del viewer\n  }\n  render() {\n    const viewerStyle = {\n      width: '100%',\n      // Ajuste del ancho\n      height: '100%' // Ajuste de la altura\n      // Puedes agregar más estilos aquí\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref => this.container = ref,\n      style: viewerStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 16\n    }, this);\n  }\n}\nViewerProyectos.propTypes = {\n  runtime: PropTypes.object,\n  urn: PropTypes.string,\n  selectedIds: PropTypes.arrayOf(PropTypes.number),\n  onCameraChange: PropTypes.func,\n  onSelectionChange: PropTypes.func\n};\nexport default ViewerProyectos;","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","Autodesk","window","runtime","options","ready","initializeViewerRuntime","Promise","resolve","Viewing","Initializer","some","prop","reject","ViewerProyectos","Component","constructor","props","onViewerCameraChange","onCameraChange","viewer","camera","getCamera","onViewerSelectionChange","onSelectionChange","ids","getSelection","container","componentDidMount","then","_","GuiViewer3D","start","loadExtensions","addEventListeners","updateViewerState","catch","err","console","error","componentWillUnmount","removeEventListeners","finish","componentDidUpdate","prevProps","loadExtension","addEventListener","CAMERA_CHANGE_EVENT","SELECTION_CHANGED_EVENT","removeEventListener","render","viewerStyle","width","height","ref","style","fileName","_jsxFileName","lineNumber","columnNumber","propTypes","object","urn","string","selectedIds","arrayOf","number","func"],"sources":["C:/Users/nicol/ProyectosWeb/icd/icd7/icd/src/components/proyectos/ViewerProyectos.jsx"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../extensions/FiltrosVisuales.js';  \r\nimport '../extensions/HandleSelectionExtension.js';\r\nconst { Autodesk } = window;\r\n\r\nconst runtime = {\r\n    /** @type {Autodesk.Viewing.InitializerOptions} */\r\n    options: null,\r\n    /** @type {Promise<void>} */\r\n    ready: null\r\n};\r\n\r\nfunction initializeViewerRuntime(options) {\r\n    if (!runtime.ready) {\r\n        runtime.options = { ...options };\r\n        runtime.ready = new Promise((resolve) => Autodesk.Viewing.Initializer(runtime.options, resolve));\r\n    } else {\r\n        if (['accessToken', 'getAccessToken', 'env', 'api', 'language'].some(prop => options[prop] !== runtime.options[prop])) {\r\n            return Promise.reject('Cannot initialize another viewer runtime with different settings.');\r\n        }\r\n    }\r\n    return runtime.ready;\r\n}\r\n\r\nclass ViewerProyectos extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.container = null;\r\n        this.viewer = null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        initializeViewerRuntime(this.props.runtime || {})\r\n            .then(_ => {\r\n                this.viewer = new Autodesk.Viewing.GuiViewer3D(this.container, {\r\n                    // Configuraciones adicionales si son necesarias\r\n                });\r\n                this.viewer.start();\r\n                this.loadExtensions();\r\n                this.addEventListeners();\r\n                this.updateViewerState({});\r\n            })\r\n            .catch(err => console.error('Error al inicializar el Viewer:', err));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.removeEventListeners();\r\n        if (this.viewer) {\r\n            this.viewer.finish();\r\n            this.viewer = null;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        this.updateViewerState(prevProps);\r\n    }\r\n\r\n    loadExtensions() {\r\n        this.viewer.loadExtension('FiltrosVisuales');\r\n        this.viewer.loadExtension('HandleSelectionExtension');\r\n    }\r\n\r\n    addEventListeners() {\r\n        this.viewer.addEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, this.onViewerCameraChange);\r\n        this.viewer.addEventListener(Autodesk.Viewing.SELECTION_CHANGED_EVENT, this.onViewerSelectionChange);\r\n    }\r\n\r\n    removeEventListeners() {\r\n        this.viewer.removeEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, this.onViewerCameraChange);\r\n        this.viewer.removeEventListener(Autodesk.Viewing.SELECTION_CHANGED_EVENT, this.onViewerSelectionChange);\r\n    }\r\n\r\n    updateViewerState(prevProps) {\r\n        // Lógica para actualizar el estado del viewer\r\n    }\r\n\r\n    onViewerCameraChange = () => {\r\n        if (this.props.onCameraChange) {\r\n            this.props.onCameraChange({ viewer: this.viewer, camera: this.viewer.getCamera() });\r\n        }\r\n    }\r\n\r\n    onViewerSelectionChange = () => {\r\n        if (this.props.onSelectionChange) {\r\n            this.props.onSelectionChange({ viewer: this.viewer, ids: this.viewer.getSelection() });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const viewerStyle = {\r\n            width: '100%', // Ajuste del ancho\r\n            height: '100%', // Ajuste de la altura\r\n            // Puedes agregar más estilos aquí\r\n        };\r\n\r\n        return <div ref={ref => this.container = ref} style={viewerStyle} />;\r\n    }\r\n}\r\n\r\nViewerProyectos.propTypes = {\r\n    runtime: PropTypes.object,\r\n    urn: PropTypes.string,\r\n    selectedIds: PropTypes.arrayOf(PropTypes.number),\r\n    onCameraChange: PropTypes.func,\r\n    onSelectionChange: PropTypes.func\r\n};\r\n\r\nexport default ViewerProyectos;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}