{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicol\\\\ProyectosWeb\\\\icd\\\\icd7\\\\icd\\\\src\\\\components\\\\Viewer.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport '../extensions/FiltrosVisuales.js';\nimport '../extensions/HandleSelectionExtension.js';\n\n// Asegúrate de que esta parte se ejecute solo una vez en tu aplicación\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Autodesk\n} = window;\nlet viewerInitialized = false;\nfunction initializeViewerRuntime(options) {\n  if (!viewerInitialized) {\n    return new Promise(resolve => Autodesk.Viewing.Initializer(options, () => {\n      viewerInitialized = true;\n      resolve();\n    }));\n  }\n  return Promise.resolve();\n}\nclass Viewer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onViewerCameraChange = () => {\n      if (this.props.onCameraChange) {\n        this.props.onCameraChange({\n          viewer: this.viewer,\n          camera: this.viewer.getCamera()\n        });\n      }\n    };\n    this.onViewerSelectionChange = () => {\n      if (this.props.onSelectionChange) {\n        this.props.onSelectionChange({\n          viewer: this.viewer,\n          ids: this.viewer.getSelection()\n        });\n      }\n    };\n    this.container = null;\n    this.viewer = null;\n  }\n  componentDidMount() {\n    initializeViewerRuntime(this.props.runtime || {}).then(() => {\n      this.viewer = new Autodesk.Viewing.GuiViewer3D(this.container);\n      this.viewer.start();\n      this.loadExtensions();\n      this.addEventListeners();\n      this.updateViewerState({});\n    }).catch(err => console.error('Error al inicializar el Viewer:', err));\n  }\n  componentWillUnmount() {\n    this.removeEventListeners();\n    if (this.viewer) {\n      this.viewer.finish();\n      this.viewer = null;\n    }\n  }\n  componentDidUpdate(prevProps) {\n    this.updateViewerState(prevProps);\n  }\n  loadExtensions() {\n    this.viewer.loadExtension('FiltrosVisuales');\n    this.viewer.loadExtension('HandleSelectionExtension');\n  }\n  addEventListeners() {\n    this.viewer.addEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, this.onViewerCameraChange);\n    this.viewer.addEventListener(Autodesk.Viewing.SELECTION_CHANGED_EVENT, this.onViewerSelectionChange);\n  }\n  removeEventListeners() {\n    this.viewer.removeEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, this.onViewerCameraChange);\n    this.viewer.removeEventListener(Autodesk.Viewing.SELECTION_CHANGED_EVENT, this.onViewerSelectionChange);\n  }\n  updateViewerState(prevProps) {\n    // Lógica para actualizar el estado del viewer\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref => this.container = ref,\n      style: {\n        width: '100%',\n        height: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 16\n    }, this);\n  }\n}\nViewer.propTypes = {\n  runtime: PropTypes.object,\n  urn: PropTypes.string,\n  selectedIds: PropTypes.arrayOf(PropTypes.number),\n  onCameraChange: PropTypes.func,\n  onSelectionChange: PropTypes.func\n};\nexport default Viewer;","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","Autodesk","window","viewerInitialized","initializeViewerRuntime","options","Promise","resolve","Viewing","Initializer","Viewer","Component","constructor","props","onViewerCameraChange","onCameraChange","viewer","camera","getCamera","onViewerSelectionChange","onSelectionChange","ids","getSelection","container","componentDidMount","runtime","then","GuiViewer3D","start","loadExtensions","addEventListeners","updateViewerState","catch","err","console","error","componentWillUnmount","removeEventListeners","finish","componentDidUpdate","prevProps","loadExtension","addEventListener","CAMERA_CHANGE_EVENT","SELECTION_CHANGED_EVENT","removeEventListener","render","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","propTypes","object","urn","string","selectedIds","arrayOf","number","func"],"sources":["C:/Users/nicol/ProyectosWeb/icd/icd7/icd/src/components/Viewer.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../extensions/FiltrosVisuales.js';  \nimport '../extensions/HandleSelectionExtension.js';\n\n// Asegúrate de que esta parte se ejecute solo una vez en tu aplicación\nconst { Autodesk } = window;\nlet viewerInitialized = false;\n\nfunction initializeViewerRuntime(options) {\n    if (!viewerInitialized) {\n        return new Promise((resolve) => Autodesk.Viewing.Initializer(options, () => {\n            viewerInitialized = true;\n            resolve();\n        }));\n    } \n    return Promise.resolve();\n}\n\nclass Viewer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.container = null;\n        this.viewer = null;\n    }\n\n    componentDidMount() {\n        initializeViewerRuntime(this.props.runtime || {})\n            .then(() => {\n                this.viewer = new Autodesk.Viewing.GuiViewer3D(this.container);\n                this.viewer.start();\n                this.loadExtensions();\n                this.addEventListeners();\n                this.updateViewerState({});\n            })\n            .catch(err => console.error('Error al inicializar el Viewer:', err));\n    }\n\n    componentWillUnmount() {\n        this.removeEventListeners();\n        if (this.viewer) {\n            this.viewer.finish();\n            this.viewer = null;\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        this.updateViewerState(prevProps);\n    }\n\n    loadExtensions() {\n        this.viewer.loadExtension('FiltrosVisuales');\n        this.viewer.loadExtension('HandleSelectionExtension');\n    }\n\n    addEventListeners() {\n        this.viewer.addEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, this.onViewerCameraChange);\n        this.viewer.addEventListener(Autodesk.Viewing.SELECTION_CHANGED_EVENT, this.onViewerSelectionChange);\n    }\n\n    removeEventListeners() {\n        this.viewer.removeEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, this.onViewerCameraChange);\n        this.viewer.removeEventListener(Autodesk.Viewing.SELECTION_CHANGED_EVENT, this.onViewerSelectionChange);\n    }\n\n    updateViewerState(prevProps) {\n        // Lógica para actualizar el estado del viewer\n    }\n\n    onViewerCameraChange = () => {\n        if (this.props.onCameraChange) {\n            this.props.onCameraChange({ viewer: this.viewer, camera: this.viewer.getCamera() });\n        }\n    }\n\n    onViewerSelectionChange = () => {\n        if (this.props.onSelectionChange) {\n            this.props.onSelectionChange({ viewer: this.viewer, ids: this.viewer.getSelection() });\n        }\n    }\n\n    render() {\n        return <div ref={ref => this.container = ref} style={{ width: '100%', height: '100%' }} />;\n    }\n}\n\nViewer.propTypes = {\n    runtime: PropTypes.object,\n    urn: PropTypes.string,\n    selectedIds: PropTypes.arrayOf(PropTypes.number),\n    onCameraChange: PropTypes.func,\n    onSelectionChange: PropTypes.func\n};\n\nexport default Viewer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}